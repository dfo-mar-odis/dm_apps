# Generated by Django 2.2.2 on 2020-01-21 17:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import herring.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shared_models', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_id', models.IntegerField()),
                ('province_id', models.IntegerField(choices=[(1, 'Nova Scotia'), (2, 'New Brunswick'), (3, 'Prince Edward Island'), (4, 'Quebec'), (5, 'Newfoundland')])),
                ('locality_list', models.TextField()),
            ],
            options={
                'ordering': ['province_id', 'district_id'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=herring.models.file_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='FishingArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nafo_area_name', models.CharField(max_length=255)),
                ('nafo_area_code', models.CharField(blank=True, max_length=25, null=True)),
                ('herring_area_code', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'ordering': ['nafo_area_code'],
            },
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gear', models.CharField(max_length=255)),
                ('gear_code', models.CharField(max_length=255)),
                ('isscfg_code', models.CharField(blank=True, max_length=255, null=True)),
                ('nafo_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['gear_code'],
            },
        ),
        migrations.CreateModel(
            name='LengthBin',
            fields=[
                ('bin_length_cm', models.FloatField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='LengthFrequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(null=True)),
                ('length_bin', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='herring.LengthBin')),
            ],
            options={
                'ordering': ('sample', 'length_bin'),
            },
        ),
        migrations.CreateModel(
            name='Maturity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maturity', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MeshSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_mm', models.IntegerField(null=True)),
                ('size_inches', models.CharField(blank=True, max_length=55, null=True)),
                ('size_inches_decimal', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['size_mm'],
            },
        ),
        migrations.CreateModel(
            name='OtolithSeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=55)),
                ('oracle_code', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Sampler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(max_length=255)),
                ('oracle_code', models.CharField(blank=True, max_length=1, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(choices=[('lab_detail', 'lab detail'), ('single_measurement', 'single measurement'), ('otolith_detail', 'otolith detail')], max_length=25)),
                ('description', models.CharField(max_length=255)),
                ('notes', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'ordering': ['scope', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(blank=True, choices=[(1, 'Port sample'), (2, 'Sea sample')], null=True)),
                ('sample_date', models.DateTimeField()),
                ('sampler_ref_number', models.IntegerField(blank=True, null=True, verbose_name="Sampler's reference number / set number")),
                ('survey_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='survey identifier')),
                ('latitude_n', models.CharField(blank=True, max_length=50, null=True, verbose_name='Latitude (N)')),
                ('longitude_w', models.CharField(blank=True, max_length=50, null=True, verbose_name='Longitude (W)')),
                ('experimental_net_used', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('vessel_cfvn', models.IntegerField(blank=True, null=True)),
                ('catch_weight_lbs', models.FloatField(blank=True, null=True, verbose_name='Catch weight (lbs)')),
                ('sample_weight_lbs', models.FloatField(blank=True, null=True, verbose_name='Sample weight (lbs)')),
                ('total_fish_measured', models.IntegerField(blank=True, null=True)),
                ('total_fish_preserved', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('old_id', models.CharField(blank=True, max_length=100, null=True)),
                ('season', models.IntegerField(blank=True, null=True)),
                ('lab_processing_complete', models.BooleanField(default=False)),
                ('otolith_processing_complete', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('last_modified_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_by_samples', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='herring.District')),
                ('fishing_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='herring.FishingArea')),
                ('gear', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='herring.Gear')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='last_modified_by_samples', to=settings.AUTH_USER_MODEL)),
                ('length_frequencies', models.ManyToManyField(through='herring.LengthFrequency', to='herring.LengthBin')),
                ('mesh_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='herring.MeshSize')),
                ('port', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='herring_samples', to='shared_models.Port')),
                ('sampler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='samples', to='herring.Sampler')),
            ],
            options={
                'ordering': ['-sample_date'],
            },
        ),
        migrations.AddField(
            model_name='lengthfrequency',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='length_frequency_objects', to='herring.Sample'),
        ),
        migrations.AlterUniqueTogether(
            name='lengthfrequency',
            unique_together={('sample', 'length_bin')},
        ),
        migrations.CreateModel(
            name='FishDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fish_number', models.IntegerField()),
                ('fish_length', models.FloatField(blank=True, null=True)),
                ('fish_weight', models.FloatField(blank=True, null=True)),
                ('gonad_weight', models.FloatField(blank=True, null=True)),
                ('parasite', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('lab_processed_date', models.DateTimeField(blank=True, null=True)),
                ('annulus_count', models.IntegerField(blank=True, null=True)),
                ('otolith_image_remote_filepath', models.CharField(blank=True, max_length=2000, null=True)),
                ('otolith_processed_date', models.DateTimeField(blank=True, null=True)),
                ('test_204_accepted', models.CharField(blank=True, max_length=5, null=True)),
                ('test_207_accepted', models.CharField(blank=True, max_length=5, null=True)),
                ('test_209_accepted', models.CharField(blank=True, max_length=5, null=True)),
                ('test_302_accepted', models.CharField(blank=True, max_length=5, null=True)),
                ('test_305_accepted', models.CharField(blank=True, max_length=5, null=True)),
                ('test_308_accepted', models.CharField(blank=True, max_length=5, null=True)),
                ('test_311_accepted', models.CharField(blank=True, max_length=5, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('last_modified_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_by_details', to=settings.AUTH_USER_MODEL)),
                ('lab_sampler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lab_sampler_fish_details', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='last_modified_by_details', to=settings.AUTH_USER_MODEL)),
                ('maturity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fish_details', to='herring.Maturity')),
                ('otolith_sampler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='otolith_sampler_fish_details', to=settings.AUTH_USER_MODEL)),
                ('otolith_season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fish_details', to='herring.OtolithSeason')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fish_details', to='herring.Sample')),
                ('sex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fish_details', to='herring.Sex')),
            ],
            options={
                'ordering': ('sample', 'fish_number'),
                'unique_together': {('sample', 'fish_number')},
            },
        ),
    ]
