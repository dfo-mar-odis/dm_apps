# Generated by Django 2.2.2 on 2020-02-19 12:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certainty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(blank=True, null=True, verbose_name='')),
                ('english_certainty_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('french_certainty_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='HealthStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='English name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='French name')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='English name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='French name')),
            ],
        ),
        migrations.CreateModel(
            name='LifeStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MetadataField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('nom', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('description_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='English description')),
                ('description_fra', models.CharField(blank=True, max_length=255, null=True, verbose_name='French description')),
                ('data_type', models.IntegerField(choices=[(1, 'integer/categorical'), (2, 'float'), (3, 'string')], verbose_name='data type')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True, verbose_name='')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='')),
                ('oppurtin', models.BooleanField(default=False)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sightings', to='vault.Instrument', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make_model', models.CharField(blank=True, max_length=250, null=True, verbose_name='Make and model')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Call name')),
                ('longname', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Long name')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationPlatformType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='English name')),
                ('abbrev_name', models.CharField(max_length=255, verbose_name='English abbreviated name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='French name')),
                ('abbrev_nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='French abbreviated name')),
            ],
        ),
        migrations.CreateModel(
            name='OriginalMediafile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('filename', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('last_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('email', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='people', to='vault.Organisation', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Internal code')),
                ('english_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='English name')),
                ('french_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='French name')),
                ('latin_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Scientific name')),
                ('vor_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='VOR code')),
                ('quebec_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Quebec code')),
                ('aphia_id', models.IntegerField(blank=True, null=True, verbose_name='ID in World Registry of Marine Species')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessedMediafile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('filename', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('verified', models.BooleanField(default=False, verbose_name='')),
                ('date_analysed', models.DateTimeField()),
                ('date_created', models.DateTimeField()),
                ('analyst', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vault.Person')),
                ('original_mediafile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='processed_mediafiles', to='vault.OriginalMediafile', verbose_name='original mediafile')),
                ('species', models.ManyToManyField(blank=True, to='vault.Species', verbose_name='')),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='roles',
            field=models.ManyToManyField(to='vault.Role', verbose_name=''),
        ),
        migrations.CreateModel(
            name='Outing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('purpose', models.CharField(blank=True, max_length=250, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('identifier_string', models.CharField(blank=True, max_length=250, null=True)),
                ('observation_platform', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='outings', to='vault.ObservationPlatform', verbose_name='observation platform')),
            ],
        ),
        migrations.CreateModel(
            name='OriginalMediafileMetadatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='original_mediafile_metadata', to='vault.MetadataField')),
                ('original_mediafile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='original_mediafile_metadata', to='vault.OriginalMediafile', verbose_name='')),
            ],
        ),
        migrations.AddField(
            model_name='originalmediafile',
            name='metadata',
            field=models.ManyToManyField(through='vault.OriginalMediafileMetadatum', to='vault.MetadataField'),
        ),
        migrations.AddField(
            model_name='originalmediafile',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='original_mediafiles', to='vault.Observation', verbose_name=''),
        ),
        migrations.CreateModel(
            name='ObservationSighting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False, verbose_name='')),
                ('certainty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.Certainty')),
                ('health_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.HealthStatus')),
                ('life_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.LifeStage')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.Observation', verbose_name='')),
                ('sex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.Sex')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_sightings', to='vault.Species')),
            ],
        ),
        migrations.AddField(
            model_name='observationplatform',
            name='authority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='platform_authorities', to='vault.Organisation', verbose_name='authority'),
        ),
        migrations.AddField(
            model_name='observationplatform',
            name='observation_platform_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='platforms', to='vault.ObservationPlatformType', verbose_name='Type of observation platform'),
        ),
        migrations.AddField(
            model_name='observationplatform',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='platform_owners', to='vault.Organisation', verbose_name='owner'),
        ),
        migrations.CreateModel(
            name='ObservationMetadatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_metadata', to='vault.MetadataField')),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='observation_metadata', to='vault.Observation', verbose_name='')),
            ],
        ),
        migrations.AddField(
            model_name='observation',
            name='metadata',
            field=models.ManyToManyField(through='vault.ObservationMetadatum', to='vault.MetadataField'),
        ),
        migrations.AddField(
            model_name='observation',
            name='observer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sightings', to='vault.Person', verbose_name=''),
        ),
        migrations.AddField(
            model_name='observation',
            name='outing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sightings', to='vault.Outing', verbose_name=''),
        ),
        migrations.CreateModel(
            name='MediafileSighting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False, verbose_name='')),
                ('certainty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.Certainty')),
                ('health_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.HealthStatus')),
                ('life_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.LifeStage')),
                ('original_mediafile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.OriginalMediafile', verbose_name='')),
                ('sex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.Sex')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mediafile_sightings', to='vault.Species')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentMetadatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='instrument_metadata', to='vault.Instrument', verbose_name='')),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_metadata', to='vault.MetadataField')),
            ],
        ),
        migrations.AddField(
            model_name='instrument',
            name='instrument_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='instruments', to='vault.InstrumentType', verbose_name='Type of instrument'),
        ),
        migrations.CreateModel(
            name='FieldName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='')),
                ('used_for', models.ManyToManyField(blank=True, to='vault.Instrument', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='MetadataFieldCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3)),
                ('description_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='English description')),
                ('description_fra', models.CharField(blank=True, max_length=255, null=True, verbose_name='French description')),
                ('metadata_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='vault.MetadataField')),
            ],
            options={
                'ordering': ['code'],
                'unique_together': {('metadata_field', 'code')},
            },
        ),
    ]
