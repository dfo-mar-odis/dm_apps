# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  - master

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.7
      architecture: 'x64'

  - script: |
      # adding the azure devops build number to the environmental variable of the app service so that it can be picked up by the front end for display
      python create_env_file.py --devops-build-number "$(Build.BuildNumber)"
    displayName: 'Creating configuration file'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/dm_apps$(Build.BuildId).zip'
      replaceExistingArchive: true
      verbose: # (no value); this input is optional
  - publish: $(Build.ArtifactStagingDirectory)/dm_apps$(Build.BuildId).zip
    displayName: 'Upload package'
    artifact: drop

  - task: AzureRmWebAppDeployment@4
    displayName: 'Azure App Service Deploy: dmapps-dev ($(Build.BuildNumber))'
    inputs:
      azureSubscription: 'SP.DMAPPS'
      appType: webAppLinux
      WebAppName: 'dmapps-prod-web'
      packageForLinux:  $(Build.ArtifactStagingDirectory)/dm_apps$(Build.BuildId).zip
      RuntimeStack: 'PYTHON|3.7'

  - task: AzureAppServiceManage@0
    displayName: 'Swap Prod with Staging: dmapps-prod-web'
    inputs:
      azureSubscription: SP.DMAPPS
      WebAppName: 'dmapps-prod-web'
      ResourceGroupName: 'DMAPPS-PROD-RG'
      SourceSlot: staging