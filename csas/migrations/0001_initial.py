# Generated by Django 2.2.2 on 2020-06-25 17:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shared_models', '0007_auto_20200617_0856'),
        ('projects', '0016_referencematerial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AptAdvisoryProcessType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CohHonorific',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('affiliation', models.CharField(max_length=100, verbose_name='Affiliation')),
                ('job_title', models.CharField(max_length=100, verbose_name='Job Title')),
                ('phone', models.CharField(max_length=12, verbose_name='Phone')),
                ('email', models.CharField(max_length=255, verbose_name='E-mail')),
                ('expertise', models.CharField(max_length=100, verbose_name='Expertise')),
                ('cc_grad', models.BooleanField(verbose_name='Chair Course Graduate')),
                ('notes', models.TextField(verbose_name='Notes')),
            ],
            options={
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='CotType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FilFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='KeyKeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LanLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MdfMeetingDocsRef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MepMeetingExpectedPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeqQuarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetMeeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(max_length=255, verbose_name='Meeting Title (English)')),
                ('title_fr', models.CharField(max_length=255, verbose_name='Meeting Title (French)')),
                ('status_notes', models.TextField(blank=True, null=True, verbose_name='Status Notes')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('chair_comments', models.TextField(blank=True, null=True, verbose_name='Chair Comments')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('chair', models.ManyToManyField(blank=True, related_name='chairs', to='csas.ConContact', verbose_name='Chair(s)')),
                ('csas_contact', models.ManyToManyField(blank=True, related_name='csas_contacts', to='csas.ConContact', verbose_name='CSAS Contact(s)')),
                ('exp_publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MepMeetingExpectedPublication', verbose_name='Expected Publication(s)')),
                ('lead_region', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region', verbose_name='Lead Region')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.LocLocation', verbose_name='Location')),
                ('other_region', models.ManyToManyField(blank=True, related_name='other_regions', to='shared_models.Region', verbose_name='Other Regions')),
                ('process_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.AptAdvisoryProcessType', verbose_name='Type of Advisory Process')),
                ('program_contact', models.ManyToManyField(blank=True, related_name='program_contacts', to='csas.ConContact', verbose_name='Program Contact(s)')),
                ('quarter', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MeqQuarter', verbose_name='Meeting Quarter')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='MftMeetingFileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='NotNotificationPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PsePublicationSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PseSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PtlPublicationTargetLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PtsPublicationTransStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PubPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(max_length=255, verbose_name='Title (English)')),
                ('title_fr', models.CharField(max_length=255, verbose_name='Title (French)')),
                ('title_in', models.CharField(max_length=255, verbose_name='Title (Inuktitut)')),
                ('pub_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='Publication Year')),
                ('pub_num', models.CharField(default='NA', max_length=25, verbose_name='Publication Number')),
                ('pages', models.IntegerField(blank=True, null=True, verbose_name='Pages')),
                ('keywords', models.CharField(default='NA', max_length=25, verbose_name='Keywords')),
                ('citation', models.TextField(blank=True, null=True, verbose_name='Citation')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('client', models.ManyToManyField(blank=True, related_name='clients', to='csas.ConContact', verbose_name='Client(s)')),
                ('lead_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ConContact', verbose_name='Lead Author')),
                ('lead_region', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region', verbose_name='Lead Region')),
                ('other_author', models.ManyToManyField(blank=True, related_name='other_authors', to='csas.ConContact', verbose_name='Other Author(s)')),
                ('series', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PsePublicationSeries', verbose_name='Series')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PurPublicationUrgentRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PusPublicationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RdeDecisionExplanation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RedDecision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RepPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RetTiming',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RolRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScpScope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SttStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Description (en)')),
                ('description_fr', models.TextField(blank=True, null=True, verbose_name='Description (fr)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetMeetingMedia',
            fields=[
                ('meeting', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.MetMeeting')),
                ('media_attention', models.BooleanField(default=False, verbose_name='Is Media Attention Anticipated')),
                ('media_attention_yes', models.TextField(blank=True, null=True, verbose_name='Why Media Attention Anticipated')),
                ('media_attention_no', models.TextField(blank=True, null=True, verbose_name='Why Media Attention Not Anticipated')),
                ('media_bullets', models.CharField(max_length=255, verbose_name='Media Bullets (ADM Summary Package)')),
                ('media_lines', models.CharField(max_length=255, verbose_name='Media Lines (Meeting/Publication)')),
            ],
        ),
        migrations.CreateModel(
            name='MetMeetingOMCosts',
            fields=[
                ('meeting', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.MetMeeting')),
                ('p1', models.CharField(blank=True, max_length=1, verbose_name='')),
                ('p2', models.CharField(blank=True, max_length=1, verbose_name='')),
                ('hospitality_description', models.CharField(max_length=255, verbose_name='Hospitality Description')),
                ('hospitality_funding', models.CharField(max_length=255, verbose_name='Hospitality Funding Source')),
                ('hospitality_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Hospitality Total O&M Amount')),
                ('travel_description', models.CharField(max_length=255, verbose_name='Travel Description')),
                ('travel_funding', models.CharField(max_length=255, verbose_name='Travel Funding Source')),
                ('travel_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Travel Total O&M Amount')),
                ('venue_description', models.CharField(max_length=255, verbose_name='Venue Description')),
                ('venue_funding', models.CharField(max_length=255, verbose_name='Venue Funding Source')),
                ('venue_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Venue Total O&M Amount')),
                ('interpretation_description', models.CharField(max_length=255, verbose_name='Interpretation Description')),
                ('interpretation_funding', models.CharField(max_length=255, verbose_name='Interpretation Funding Source')),
                ('interpretation_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Interpretation Total O&M Amount')),
                ('office_supplies_description', models.CharField(max_length=255, verbose_name='Office Supplies\u202fDescription')),
                ('office_supplies_funding', models.CharField(max_length=255, verbose_name='Office Supplies\u202fFunding Source')),
                ('office_supplies_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Office Supplies\u202fTotal O&M Amount')),
                ('rentals_description', models.CharField(max_length=255, verbose_name='Rentals Description')),
                ('rentals_funding', models.CharField(max_length=255, verbose_name='Rentals Funding Source')),
                ('rentals_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Rentals Total O&M Amount')),
                ('contractors_description', models.CharField(max_length=255, verbose_name='Contractors/Consultants Description')),
                ('contractors_funding', models.CharField(max_length=255, verbose_name='Contractors/Consultants Funding Source')),
                ('contractors_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Contractors/Consultants Total O&M Amount')),
                ('planning_description', models.CharField(max_length=255, verbose_name='Planning Description')),
                ('planning_funding', models.CharField(max_length=255, verbose_name='Planning Funding Source')),
                ('planning_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Planning Total O&M Amount')),
            ],
        ),
        migrations.CreateModel(
            name='PubPublicationComResults',
            fields=[
                ('publication', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.PubPublication')),
                ('p1', models.CharField(blank=True, max_length=1, verbose_name='')),
                ('p2', models.CharField(blank=True, max_length=1, verbose_name='')),
                ('media_line_desc', models.TextField(blank=True, null=True, verbose_name='Media Lines Description')),
                ('media_line_size', models.CharField(default='NA', max_length=255, verbose_name='Media Lines Size')),
                ('media_line_atta', models.CharField(default='NA', max_length=255, verbose_name='Media Lines Attachment')),
                ('brief_mate_desc', models.TextField(blank=True, null=True, verbose_name='Briefing Material Description')),
                ('brief_mate_size', models.CharField(default='NA', max_length=255, verbose_name='Briefing Material Size')),
                ('brief_mate_atta', models.CharField(default='NA', max_length=255, verbose_name='Briefing Material Attachment')),
                ('other_comm_desc', models.TextField(blank=True, null=True, verbose_name='Other Communication Material Description')),
                ('other_comm_size', models.CharField(default='NA', max_length=255, verbose_name='Other Communication Material Size')),
                ('other_comm_atta', models.CharField(default='NA', max_length=255, verbose_name='Other Communication Material Attachment')),
            ],
        ),
        migrations.CreateModel(
            name='PubPublicationDocLocation',
            fields=[
                ('publication', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.PubPublication')),
                ('p1', models.CharField(blank=True, max_length=1, verbose_name='')),
                ('attach_en_file', models.CharField(default='NA', max_length=255, verbose_name='Attachment (English) File')),
                ('attach_en_size', models.CharField(default='NA', max_length=255, verbose_name='Attachment (English) Size')),
                ('attach_fr_file', models.CharField(default='NA', max_length=255, verbose_name='Attachment (French) File')),
                ('attach_fr_size', models.CharField(default='NA', max_length=255, verbose_name='Attachment (French) Size')),
                ('url_e', models.URLField(blank=True, db_index=True, max_length=128, unique=True, verbose_name='URL (English)')),
                ('url_f', models.URLField(blank=True, db_index=True, max_length=128, unique=True, verbose_name='URL (French)')),
                ('dev_link_e', models.URLField(blank=True, db_index=True, max_length=128, unique=True, verbose_name='Dev Link (English)')),
                ('dev_link_f', models.URLField(blank=True, db_index=True, max_length=128, unique=True, verbose_name='Dev Link (French)')),
                ('lib_cat_e', models.CharField(default='NA', max_length=255, verbose_name='Library Catalogue # (English)')),
                ('lib_cat_f', models.CharField(default='NA', max_length=255, verbose_name='Library Catalogue # (French)')),
                ('lib_link_e', models.URLField(blank=True, db_index=True, max_length=128, unique=True, verbose_name='Library Link (English)')),
                ('lib_link_f', models.URLField(blank=True, db_index=True, max_length=128, unique=True, verbose_name='Library Link (French)')),
            ],
        ),
        migrations.CreateModel(
            name='PubPublicationOMCosts',
            fields=[
                ('publication', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.PubPublication')),
                ('p1', models.CharField(blank=True, max_length=1, verbose_name='')),
                ('trans_funding', models.CharField(default='NA', max_length=255, verbose_name='Translation Funding Source (e.g. sector)')),
                ('trans_code', models.CharField(default='NA', max_length=255, verbose_name='Translation Coding')),
                ('trans_estimate', models.CharField(default='NA', max_length=255, verbose_name='Translation Estimate')),
                ('trans_cost', models.CharField(default='NA', max_length=255, verbose_name='Translation Total Cost')),
            ],
        ),
        migrations.CreateModel(
            name='ReqRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_req_id', models.CharField(max_length=45, verbose_name='Assigned Request Number')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('in_year_request', models.BooleanField(verbose_name='In-Year Request')),
                ('client_name', models.CharField(max_length=100, verbose_name='Client Name')),
                ('client_title', models.CharField(max_length=100, verbose_name='Client Title')),
                ('client_email', models.CharField(max_length=255, verbose_name='Client E-mail')),
                ('issue', models.TextField(help_text='Issue requiring science information and/or advice. Posted as a question to be answered by Science.', verbose_name='Issue')),
                ('rationale', models.TextField(help_text='Rationale or context for the request: What will the information/advice be used for? Who will be the end user(s)? Will it impact other DFO programs or regions?', verbose_name='Rationale for Request')),
                ('rationale_for_timing', models.TextField(help_text='Explain rationale for proposed timing.', verbose_name='Rationale for Timing')),
                ('funding', models.BooleanField(help_text='Do you have funds to cover extra costs associated with this request?')),
                ('funding_notes', models.TextField(max_length=100, verbose_name='Funding Notes')),
                ('science_discussion', models.BooleanField(help_text='Have you talked to Science about this request?', verbose_name='Science Discussion')),
                ('science_discussion_notes', models.CharField(help_text='If you have talked to Science about this request, to whom have you talked?', max_length=100, verbose_name='Science Discussion Notes')),
                ('adviser_submission', models.DateField(blank=True, null=True, verbose_name='Client Adviser Submission Date')),
                ('rd_submission', models.DateField(blank=True, null=True, verbose_name='Client RD Submission Date')),
                ('decision_date', models.DateField(blank=True, null=True, verbose_name='Decision Date')),
                ('client_sector', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.SecSector', verbose_name='Client Sector')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RepPriority', verbose_name='Priority')),
                ('proposed_timing', models.ForeignKey(help_text='Latest possible date to receive Science Advice.', on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RetTiming', verbose_name='Proposed Timing')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region', verbose_name='Region')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PurOtherRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
                ('reg_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region')),
            ],
        ),
        migrations.CreateModel(
            name='PukPublicationKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.KeyKeywords')),
                ('pub_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
            ],
        ),
        migrations.CreateModel(
            name='PuaOtherAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('con_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ConContact')),
                ('pub_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
            ],
        ),
        migrations.CreateModel(
            name='PtiPublicationTitle',
            fields=[
                ('pst_title', models.AutoField(primary_key=True, serialize=False)),
                ('publication', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=100)),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.LanLanguage')),
            ],
        ),
        migrations.CreateModel(
            name='OmCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=10, max_digits=20)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='projects.OMCategory')),
                ('funding_source', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='projects.FundingSource')),
            ],
        ),
        migrations.CreateModel(
            name='MomMeetingOmCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('met_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
                ('om_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.OmCost')),
            ],
        ),
        migrations.CreateModel(
            name='MetMeetingOtherPars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=255, verbose_name='Role')),
                ('affiliation', models.CharField(max_length=255, verbose_name='Affiliation')),
                ('invited', models.BooleanField(verbose_name='Invited')),
                ('attended', models.BooleanField(verbose_name='Attended')),
                ('meeting', models.ManyToManyField(blank=True, related_name='meetingOther', to='csas.MetMeeting', verbose_name='Meeting')),
                ('name', models.ManyToManyField(blank=True, related_name='name_other', to='csas.ConContact', verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='MetMeetingDFOPars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=255, verbose_name='Role')),
                ('time', models.CharField(max_length=255, verbose_name='Time (Weeks)')),
                ('cost_category', models.CharField(max_length=255, verbose_name='Cost Category')),
                ('funding_source', models.CharField(max_length=255, verbose_name='Funding Source')),
                ('total_salary', models.CharField(max_length=255, verbose_name='Total Salary Amount')),
                ('meeting', models.ManyToManyField(blank=True, related_name='meetingDFO', to='csas.MetMeeting', verbose_name='Meeting')),
                ('name', models.ManyToManyField(blank=True, related_name='name_DFO', to='csas.ConContact', verbose_name='Name')),
            ],
        ),
        migrations.AddField(
            model_name='metmeeting',
            name='scope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ScpScope', verbose_name='Scope'),
        ),
        migrations.AddField(
            model_name='metmeeting',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.SttStatus', verbose_name='Meeting Status'),
        ),
        migrations.CreateModel(
            name='MerOtherRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region')),
            ],
        ),
        migrations.CreateModel(
            name='MepExpectedPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
            ],
        ),
        migrations.CreateModel(
            name='MefMeetingFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_submitted', models.DateField(blank=True, null=True, verbose_name='Date Submitted')),
                ('date_posted', models.DateField(blank=True, null=True, verbose_name='Date Postted')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MftMeetingFileType')),
                ('file_en', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='file_en', to='csas.FilFile')),
                ('file_fr', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='file_fr', to='csas.FilFile')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
            ],
        ),
        migrations.CreateModel(
            name='MecMeetingContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ConContact')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
            ],
        ),
        migrations.AddField(
            model_name='concontact',
            name='contact_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.CotType', verbose_name='Contact Type'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='honorific',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.CohHonorific', verbose_name='Honorific'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.LanLanguage', verbose_name='Language'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='notification_preference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.NotNotificationPreference', verbose_name='Notification Preference'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='role',
            field=models.ForeignKey(help_text='Indicates permissions i.e. regional coordinator, regional science adviser, regional admin, director, etc.', on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RolRole', verbose_name='Role'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.SecSector', verbose_name='Sector'),
        ),
        migrations.CreateModel(
            name='ReqRequestCSAS',
            fields=[
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.ReqRequest')),
                ('trans_title', models.CharField(max_length=255, verbose_name='Translated Title')),
                ('decision_date', models.DateField(blank=True, null=True, verbose_name='Decision Date')),
                ('decision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RedDecision', verbose_name='Decision')),
                ('decision_exp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RdeDecisionExplanation', verbose_name='Decision Explanation')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ResStatus', verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='PubPublicationTransInfo',
            fields=[
                ('publication', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.PubPublication')),
                ('date_to_trans', models.DateField(blank=True, null=True, verbose_name='Date Sent to Translation')),
                ('client_ref_num', models.CharField(default='NA', max_length=255, verbose_name='Client Reference Number')),
                ('trans_ref_num', models.CharField(default='NA', max_length=255, verbose_name='Translator Reference Number')),
                ('date_fr_trans', models.DateField(blank=True, null=True, verbose_name='Date Back from Translation')),
                ('invoice_num', models.CharField(default='NA', max_length=255, verbose_name='Invoice Number')),
                ('attach', models.CharField(default='NA', max_length=255, verbose_name='Attachment(s)')),
                ('trans_note', models.TextField(blank=True, null=True, verbose_name='Translation Notes')),
                ('target_lang', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PtlPublicationTargetLanguage', verbose_name='Target Language')),
                ('trans_status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PtsPublicationTransStatus', verbose_name='Translation Status')),
                ('urgent_req', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PurPublicationUrgentRequest', verbose_name='Urgent Request')),
            ],
        ),
        migrations.CreateModel(
            name='PubPublicationStatus',
            fields=[
                ('publication', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.PubPublication')),
                ('date_due', models.DateField(blank=True, null=True, verbose_name='Date Due')),
                ('status_comments', models.TextField(blank=True, null=True, verbose_name='Status Comments')),
                ('data_submitted', models.DateField(blank=True, null=True, verbose_name='Date Submitted by Author')),
                ('date_appr_by_chair', models.DateField(blank=True, null=True, verbose_name='Date Approved by Chair')),
                ('data_appr_by_CSAS', models.DateField(blank=True, null=True, verbose_name='Date Approved by CSAS')),
                ('date_appr_by_dir', models.DateField(blank=True, null=True, verbose_name='Date Approved by Director')),
                ('date_num_req', models.DateField(blank=True, null=True, verbose_name='Date Number Requested')),
                ('date_doc_submitted', models.DateField(blank=True, null=True, verbose_name='Date Document Submitted to CSAS')),
                ('date_pdf_proof', models.DateField(blank=True, null=True, verbose_name='Date PDF Proof Sent to Author')),
                ('date_anti', models.DateField(blank=True, null=True, verbose_name='Date of Anticipated Posting')),
                ('date_pasted', models.DateField(blank=True, null=True, verbose_name='Date Posted')),
                ('date_modify', models.DateField(blank=True, null=True, verbose_name='Date Modified')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('appr_by', models.ManyToManyField(blank=True, related_name='appr_by', to='csas.ConContact', verbose_name='Approved by (PDF Proof)')),
                ('appr_by_CSAS', models.ManyToManyField(blank=True, related_name='appr_by_CSAS', to='csas.ConContact', verbose_name='Approved By (CSAS Contact)')),
                ('appr_by_chair', models.ManyToManyField(blank=True, related_name='appr_by_chair', to='csas.ConContact', verbose_name='Approved By (Chair)')),
                ('appr_by_dir', models.ManyToManyField(blank=True, related_name='appr_by_dir', to='csas.ConContact', verbose_name='Approved By Director')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PusPublicationStatus', verbose_name='Status')),
                ('submitted_by', models.ManyToManyField(blank=True, related_name='submitted_by', to='csas.ConContact', verbose_name='Submitted By')),
            ],
        ),
        migrations.CreateModel(
            name='MetMeetingDocs',
            fields=[
                ('meeting', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='csas.MetMeeting')),
                ('date_submitted', models.DateField(blank=True, default='0001-01-01', null=True, verbose_name='Date Submitted (YYYY-MM-DD)')),
                ('date_posted', models.DateField(blank=True, default='0001-01-01', null=True, verbose_name='Date Posted (YYYY-MM-DD)')),
                ('link_en', models.CharField(default='NA', max_length=255, verbose_name='Link (English)')),
                ('link_fr', models.CharField(default='NA', max_length=255, verbose_name='Link (French)')),
                ('attachment_en', models.CharField(default='NA', max_length=255, verbose_name='Attachment (English)')),
                ('attachment_fr', models.CharField(default='NA', max_length=255, verbose_name='Attachment (French)')),
                ('reference', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MdfMeetingDocsRef', verbose_name='Terms of Reference')),
            ],
        ),
    ]
