# Generated by Django 2.2.2 on 2020-04-28 13:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        ('shared_models', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AptAdvisoryProcessType',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('apt_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CohHonorific',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('coh_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConContact',
            fields=[
                ('con_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('affiliation', models.CharField(max_length=100, verbose_name='Affiliation')),
                ('job_title', models.CharField(max_length=100, verbose_name='Job Title')),
                ('phone', models.CharField(max_length=12, verbose_name='Phone')),
                ('email', models.CharField(max_length=255, verbose_name='E-mail')),
                ('expertise', models.CharField(max_length=100, verbose_name='Expertise')),
                ('cc_grad', models.BooleanField(verbose_name='Chair Course Graduate')),
                ('notes', models.TextField(verbose_name='Notes')),
            ],
        ),
        migrations.CreateModel(
            name='CotType',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('cot_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FilFile',
            fields=[
                ('fil_id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='KeyKeywords',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('key_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LanLanguage',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('lan_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocLocation',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('loc_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeqQuarter',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('meq_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetMeeting',
            fields=[
                ('met_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End_Date')),
                ('title_en', models.CharField(max_length=255, verbose_name='Title (English)')),
                ('title_fr', models.CharField(max_length=255, verbose_name='Title (French)')),
                ('chair_comments', models.TextField(blank=True, null=True, verbose_name='Chair Comments')),
                ('status_notes', models.TextField(blank=True, null=True, verbose_name='Status Notes')),
                ('csas_contact', models.ManyToManyField(related_name='csas_contacts', to='csas.ConContact', verbose_name='CSAS Contact')),
                ('lead_region', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region', verbose_name='Lead Region')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.LocLocation', verbose_name='Location')),
                ('other_region', models.ManyToManyField(related_name='other_regions', to='shared_models.Region', verbose_name='Other Region')),
                ('process_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.AptAdvisoryProcessType', verbose_name='Process Type')),
                ('program_contact', models.ManyToManyField(related_name='program_contacts', to='csas.ConContact', verbose_name='Program Contact')),
                ('quarter', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MeqQuarter')),
            ],
        ),
        migrations.CreateModel(
            name='MftMeetingFileType',
            fields=[
                ('mft_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='NotNotificationPreference',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('not_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OthOther',
            fields=[
                ('oth_id', models.AutoField(primary_key=True, serialize=False)),
                ('oth_num', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='PsePublicationSeries',
            fields=[
                ('pse_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PseSeries',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('pse_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PubPublication',
            fields=[
                ('pub_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_year', models.IntegerField(blank=True, null=True, verbose_name='Publication Year')),
                ('pub_num', models.CharField(max_length=25, verbose_name='Publication Number')),
                ('pages', models.IntegerField(blank=True, null=True, verbose_name='Pages')),
                ('citation', models.TextField(blank=True, null=True, verbose_name='Citation')),
                ('lead_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ConContact', verbose_name='Lead Author')),
                ('lead_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region', verbose_name='Lead Region')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.LocLocation', verbose_name='Documentation Location')),
            ],
        ),
        migrations.CreateModel(
            name='RedDecision',
            fields=[
                ('red_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RepPriority',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('rep_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RetTiming',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('ret_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RolRole',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScpScope',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('scp_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecSector',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('sec_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SttStatus',
            fields=[
                ('name_en', models.CharField(max_length=255, unique=True)),
                ('name_fr', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('stt_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReqRequest',
            fields=[
                ('req_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_req_id', models.CharField(max_length=45, verbose_name='Assigned Request Number')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('in_year_request', models.BooleanField(verbose_name='In-Year Request')),
                ('client_name', models.CharField(max_length=100, verbose_name='Client Name')),
                ('client_title', models.CharField(max_length=100, verbose_name='Client Title')),
                ('client_email', models.CharField(max_length=255, verbose_name='Client E-mail')),
                ('issue', models.TextField(help_text='Issue requiring science information and/or advice. Posted as a question to be answered by Science.', verbose_name='Issue')),
                ('rationale', models.TextField(help_text='Rationale or context for the request: What will the information/advice be used for? Who will be the end user(s)? Will it impact other DFO programs or regions?', verbose_name='Rationale for Request')),
                ('rationale_for_timing', models.TextField(help_text='Explain rationale for proposed timing.', verbose_name='Rationale for Timing')),
                ('funding', models.BooleanField(help_text='Do you have funds to cover extra costs associated with this request?')),
                ('funding_notes', models.TextField(max_length=100, verbose_name='Funding Notes')),
                ('science_discussion', models.BooleanField(help_text='Have you talked to Science about this request?', verbose_name='Science Discussion')),
                ('science_discussion_notes', models.CharField(help_text='If you have talked to Science about this request, to whom have you talked?', max_length=100, verbose_name='Science Discussion Notes')),
                ('adviser_submission', models.DateField(blank=True, null=True, verbose_name='Client Adviser Submission Date')),
                ('rd_submission', models.DateField(blank=True, null=True, verbose_name='Client RD Submission Date')),
                ('decision_date', models.DateField(blank=True, null=True, verbose_name='Decision Date')),
                ('client_sector', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.SecSector', verbose_name='Client Sector')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RepPriority', verbose_name='Priority')),
                ('proposed_timing', models.ForeignKey(help_text='Latest possible date to receive Science Advice.', on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RetTiming', verbose_name='Proposed Timing')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region')),
            ],
        ),
        migrations.CreateModel(
            name='PurOtherRegion',
            fields=[
                ('pur_id', models.AutoField(primary_key=True, serialize=False)),
                ('pub_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
                ('reg_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region')),
            ],
        ),
        migrations.CreateModel(
            name='PukPublicationKeyword',
            fields=[
                ('puk_id', models.AutoField(primary_key=True, serialize=False)),
                ('key_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.KeyKeywords')),
                ('pub_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
            ],
        ),
        migrations.AddField(
            model_name='pubpublication',
            name='scope',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ScpScope', verbose_name='Scope'),
        ),
        migrations.AddField(
            model_name='pubpublication',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PsePublicationSeries', verbose_name='Series'),
        ),
        migrations.CreateModel(
            name='PuaOtherAuthor',
            fields=[
                ('pua_id', models.AutoField(primary_key=True, serialize=False)),
                ('con_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ConContact')),
                ('pub_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
            ],
        ),
        migrations.CreateModel(
            name='PtiPublicationTitle',
            fields=[
                ('pst_title', models.AutoField(primary_key=True, serialize=False)),
                ('publication', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=100)),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='csas.LanLanguage')),
            ],
        ),
        migrations.CreateModel(
            name='OmCost',
            fields=[
                ('om_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=10, max_digits=20)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='projects.OMCategory')),
                ('funding_source', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='projects.FundingSource')),
            ],
        ),
        migrations.CreateModel(
            name='MomMeetingOmCost',
            fields=[
                ('mom_id', models.AutoField(primary_key=True, serialize=False)),
                ('met_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
                ('om_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.OmCost')),
            ],
        ),
        migrations.AddField(
            model_name='metmeeting',
            name='scope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ScpScope', verbose_name='Scope'),
        ),
        migrations.AddField(
            model_name='metmeeting',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.SttStatus', verbose_name='Status'),
        ),
        migrations.CreateModel(
            name='MerOtherRegion',
            fields=[
                ('mer_id', models.AutoField(primary_key=True, serialize=False)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region')),
            ],
        ),
        migrations.CreateModel(
            name='MepExpectedPublication',
            fields=[
                ('mep_id', models.AutoField(primary_key=True, serialize=False)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.PubPublication')),
            ],
        ),
        migrations.CreateModel(
            name='MefMeetingFile',
            fields=[
                ('mef_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_submitted', models.DateField(blank=True, null=True, verbose_name='Date Submitted')),
                ('date_posted', models.DateField(blank=True, null=True, verbose_name='Date Postted')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MftMeetingFileType')),
                ('file_en', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='file_en', to='csas.FilFile')),
                ('file_fr', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='file_fr', to='csas.FilFile')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
            ],
        ),
        migrations.CreateModel(
            name='MecMeetingContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mec_id', models.CharField(max_length=45)),
                ('confirmed', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.ConContact')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.MetMeeting')),
            ],
        ),
        migrations.AddField(
            model_name='concontact',
            name='contact_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.CotType', verbose_name='Contact Type'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='honorific',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.CohHonorific', verbose_name='Honorific'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.LanLanguage', verbose_name='Language'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='notification_preference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.NotNotificationPreference', verbose_name='Notification Preference'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='role',
            field=models.ForeignKey(help_text='Indicates permissions i.e. regional coordinator, regional science adviser, regional admin, director, etc.', on_delete=django.db.models.deletion.DO_NOTHING, to='csas.RolRole', verbose_name='Role'),
        ),
        migrations.AddField(
            model_name='concontact',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='csas.SecSector', verbose_name='Sector'),
        ),
    ]
