# Generated by Django 2.2.2 on 2020-04-29 02:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shared_models', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CITESAppendix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
                ('description_eng', models.TextField(blank=True, null=True, verbose_name='english description')),
                ('description_fre', models.TextField(blank=True, null=True, verbose_name='french description')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='record name')),
                ('record_type', models.IntegerField(choices=[(1, 'points'), (2, 'line'), (3, 'polygon')], verbose_name='record type')),
                ('source', models.CharField(max_length=1000, verbose_name='source')),
                ('year', models.CharField(blank=True, max_length=1000, null=True, verbose_name='source year')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'ordering': ['species', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
                ('temp_file', models.FileField(null=True, upload_to='temp_file')),
                ('type', models.IntegerField(choices=[(2, 'line'), (3, 'polygon')], default=3, verbose_name='record type')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='regions', to='shared_models.Province')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RegionPolygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField(blank=True, null=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polygons', to='sar_search.Region')),
            ],
            options={
                'ordering': ['region'],
            },
        ),
        migrations.CreateModel(
            name='ResponsibleAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SARASchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
                ('description_eng', models.CharField(blank=True, max_length=1000, null=True, verbose_name='english description')),
                ('description_fre', models.CharField(blank=True, max_length=1000, null=True, verbose_name='french description')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpeciesStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_for', models.IntegerField(choices=[(1, 'SARA / COSEWIC'), (2, 'Nova Scotia'), (3, 'New Brunswick'), (5, 'IUCN Red List')])),
                ('code', models.CharField(max_length=5)),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
                ('description_eng', models.CharField(blank=True, max_length=1000, null=True, verbose_name='english description')),
                ('description_fre', models.CharField(blank=True, max_length=1000, null=True, verbose_name='french description')),
            ],
            options={
                'ordering': ['used_for', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=255, verbose_name='english name')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='french name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name_eng', models.CharField(max_length=255, verbose_name='name (English)')),
                ('common_name_fre', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (French)')),
                ('population_eng', models.CharField(blank=True, max_length=255, null=True, verbose_name='population (English)')),
                ('population_fre', models.CharField(blank=True, max_length=255, null=True, verbose_name='population (French)')),
                ('scientific_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tsn', models.IntegerField(blank=True, null=True, verbose_name='ITIS TSN')),
                ('notes_eng', models.TextField(blank=True, max_length=255, null=True, verbose_name='notes (English)')),
                ('notes_fra', models.TextField(blank=True, max_length=255, null=True, verbose_name='notes (French)')),
                ('temp_file', models.FileField(null=True, upload_to='temp_file')),
                ('date_last_modified', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date last modified')),
                ('cites_appendix', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='spp', to='sar_search.CITESAppendix', verbose_name='CITES appendix')),
                ('cosewic_status', models.ForeignKey(blank=True, limit_choices_to={'used_for': 1}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cosewic_spp', to='sar_search.SpeciesStatus', verbose_name='COSEWIC status')),
                ('iucn_red_list_status', models.ForeignKey(blank=True, limit_choices_to={'used_for': 5}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='iucn_spp', to='sar_search.SpeciesStatus', verbose_name='IUCN Red Flag status')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sar_spp', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('nb_status', models.ForeignKey(blank=True, limit_choices_to={'used_for': 3}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nb_spp', to='sar_search.SpeciesStatus', verbose_name='NB status')),
                ('ns_status', models.ForeignKey(blank=True, limit_choices_to={'used_for': 2}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ns_spp', to='sar_search.SpeciesStatus', verbose_name='NS status')),
                ('province_range', models.ManyToManyField(blank=True, to='shared_models.Province')),
                ('responsible_authority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='spp', to='sar_search.ResponsibleAuthority', verbose_name='responsible authority')),
                ('sara_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='spp', to='sar_search.SARASchedule', verbose_name='SARA schedule')),
                ('sara_status', models.ForeignKey(blank=True, limit_choices_to={'used_for': 1}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sara_spp', to='sar_search.SpeciesStatus', verbose_name='SARA status')),
                ('taxon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='spp', to='sar_search.Taxon')),
            ],
            options={
                'ordering': ['common_name_eng'],
            },
        ),
        migrations.CreateModel(
            name='RegionPolygonPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True, verbose_name='order')),
                ('region_polygon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='sar_search.RegionPolygon')),
            ],
            options={
                'ordering': ['region_polygon', 'order'],
            },
        ),
        migrations.CreateModel(
            name='RecordPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='site name')),
                ('latitude_n', models.FloatField()),
                ('longitude_w', models.FloatField()),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='sar_search.Record')),
            ],
            options={
                'ordering': ['record'],
            },
        ),
        migrations.AddField(
            model_name='record',
            name='regions',
            field=models.ManyToManyField(blank=True, related_name='records', to='sar_search.Region'),
        ),
        migrations.AddField(
            model_name='record',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='records', to='sar_search.Species'),
        ),
    ]
